name: Build TelegramNotifier

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  lint-php:
    name: üßπ Lint PHP
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: PHP Syntax Check
        run: |
          find . -name "*.php" -print0 | xargs -0 -n1 php -l
          if [ $? -ne 0 ]; then
            echo "PHP syntax check failed"
            exit 1
          fi

  lint-markdown:
    name: üßπ Lint Markdown
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@main
        with:
          globs: "**/*.md" # Checks all Markdown files in the repository
          fix: true # automatically fixes simple problems
          config: ".markdownlint.jsonc" # if you have a configuration file
  #        continue-on-error: true  # to prevent the build from crashing due to errors in the documentation

  secrets-scan:
    name: üîë Secrets Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0 # Required for diff scan

      - name: TruffleHog Secrets Scan (full)
        if: github.event_name != 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          extra_args: --results=verified,unknown

      - name: TruffleHog Secrets Scan (diff)
        if: github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
          extra_args: --results=verified,unknown

  build:
    name: üèóÔ∏è Build Plugin
    needs: [lint-php, lint-markdown, secrets-scan]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Create directory
        run: mkdir telegramnotifier

      - name: Move files
        run: mv LICENSE README.md telegramnotifier.php config.xml index.php logo.png telegramnotifier

      - name: Create ZIP archive
        run: zip -r telegramnotifier.zip telegramnotifier

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: TelegramNotifier
          path: telegramnotifier.zip
